{
  "name": "hcp",
  "product_version": "4.0.0",
  "sdl_version": "1.0.0",
  "vendor": "HPE",
  "parameters": [
    {
      "name": "KUBERNETES_MASTER",
      "description": "Kubernetes master node IP",
      "default": "http://192.168.200.2:8080",
      "required": true
    },
    {
      "name": "KUBERNETES_VERSION",
      "description": "Kubernetes version in use",
      "required": true
    },
    {
      "name": "NTP_SERVERS",
      "description": "Comma-delimited list of ntp servers to use",
      "required": true
    },
    {
      "name": "LOG_LEVEL",
      "description": "Log level of ipmgr",
      "default": "DEBUG"
    },
    {
      "name": "LOGSTASH_HOST",
      "description": "Logstash host",
      "default": ""
    },
    {
      "name": "LOGSTASH_PORT",
      "description": "Logstash port",
      "default": ""
    },
    {
      "name": "TLS_INSECURE",
      "description": "TLS Insecure Flag",
      "default": "false"
    },
    {
      "name": "CLUSTER_ID",
      "description": "Cluster ID, set during bootstrap",
      "required": true
    },
    {
      "name": "RPMGR_DOCKER_VERSION",
      "description": "Docker Version for rpmgr",
      "default": "1.10.3"
    },
    {
      "name": "RPMGR_PROVIDER",
      "description": "IaaS Provider for RPMGR",
      "default": "local"
    },
    {
      "name": "IPMGR_PROVIDER",
      "description": "IaaS Provider for IPMGR",
      "default": "local"
    },
    {
      "name": "AWS_REGION",
      "description": "The AWS region",
      "default": "us-west-2"
    },
    {
      "name": "AWS_AVAILABILITY_ZONES",
      "description": "The AWS AZ",
      "default": "a"
    },
    {
      "name": "AWS_MASTER_INSTANCE_TYPE",
      "description": "The AWS master instance type to use",
      "default": "t2.medium"
    },
    {
      "name": "AWS_NODE_INSTANCE_TYPE",
      "description": "The AWS node instance type to use",
      "default": "t2.large"
    },
    {
      "name": "AWS_GLUSTERFS_INSTANCE_TYPE",
      "description": "The AWS GlusterFS instance type to use",
      "default": "t2.medium"
    },
    {
      "name": "AWS_WINDOWS2012R2_INSTANCE_TYPE",
      "description": "The AWS Windows 2012R2 instance type to use",
      "default": "t2.large"
    },
    {
      "name": "AWS_LINUX_AMI",
      "description": "The AWS Linux AMI to use for Ubuntu 14.04.3",
      "default": "ami-9abea4fb"
    },
    {
      "name": "AWS_WINDOWS2012R2_AMI",
      "description": "The AWS AMI to use for Microsoft Windows Server 2012R2",
      "default": "ami-123123123"
    },
    {
      "name": "AWS_KEYPAIR",
      "description": "The AWS keypair name",
      "default": ""
    },
    {
      "name": "AWS_VPC_ID",
      "description": "The AWS VPC ID"
    },
    {
      "name": "AWS_ACCESS_KEY_ID",
      "description": "The AWS Access Key ID to use",
      "default": ""
    },
    {
      "name": "AWS_SECRET_KEY_FILE",
      "description": "The AWS secret key file on disk",
      "default": "/etc/secrets/aws-secret-key"
    },
    {
      "name": "AWS_KEYPAIR_FILE",
      "description": "The AWS keypair file on disk",
      "default": "/etc/secrets/keypair"
    },
    {
      "name": "AWS_JUMPBOX_CIDR",
      "description": "The AWS jumpbox CIDR",
      "default": "0.0.0.0/0"
    },
    {
      "name": "AWS_PUBLIC_SUBNET_IDS_AND_AZ",
      "description": "The AWS Public subnet ID"
    },
    {
      "name": "AWS_PRIVATE_SUBNET_IDS_AND_AZ",
      "description": "The AWS Private subnet ID"
    },
    {
      "name": "OS_AUTH_URL",
      "description": "OpenStack Keystone URL",
      "default": ""
    },
    {
      "name": "OS_USERNAME",
      "description": "OpenStack Username",
      "default": ""
    },
    {
      "name": "OS_PASSWORD",
      "description": "OpenStack Password",
      "default": ""
    },
    {
      "name": "OS_DOMAIN_ID",
      "description": "OpenStack Domain ID",
      "default": ""
    },
    {
      "name": "OS_DOMAIN_NAME",
      "description": "OpenStack Domain Name",
      "default": ""
    },
    {
      "name": "OS_TENANT_ID",
      "description": "OpenStack Tenant ID",
      "default": ""
    },
    {
      "name": "OS_TENANT_NAME",
      "description": "OpenStack Tenant Name",
      "default": ""
    },
    {
      "name": "OS_INSECURE",
      "description": "OpenStack Insecure Flag",
      "default": ""
    },
    {
      "name": "OS_ENDPOINT_TYPE",
      "description": "OpenStack Endpoint Type",
      "default": ""
    },
    {
      "name": "OS_REGION_NAME",
      "description": "OpenStack Region Name",
      "default": ""
    },
    {
      "name": "OS_POOL_NAME",
      "description": "OpenStack Pool Name",
      "default": ""
    },
    {
      "name": "OS_NETWORK_ID",
      "description": "OpenStack Network ID",
      "default": ""
    },
    {
      "name": "OS_SUBNET_ID",
      "description": "OpenStack Subnet ID",
      "default": ""
    },
    {
      "name": "OS_AVAILABILITY_ZONE",
      "description": "OpenStack Availability Zone",
      "default": ""
    },
    {
      "name": "OS_MASTER_FLAVOR_ID",
      "description": "OpenStack master Flavor ID",
      "default": ""
    },
    {
      "name": "OS_NODE_FLAVOR_ID",
      "description": "OpenStack node Flavor ID",
      "default": ""
    },
    {
      "name": "OS_GLUSTERFS_FLAVOR_ID",
      "description": "OpenStack GlusterFS Flavor ID",
      "default": ""
    },
    {
      "name": "OS_WINDOWS2012R2_FLAVOR_ID",
      "description": "OpenStack Windows 2012R2 Flavor ID",
      "default": ""
    },
    {
      "name": "OS_LINUX_IMAGE_ID",
      "description": "OpenStack Linux Image ID for Ubuntu 14.04.3",
      "default": ""
    },
    {
      "name": "OS_WINDOWS2012R2_IMAGE_ID",
      "description": "OpenStack Microsoft Windows Server 2012R2 Image ID",
      "default": ""
    },
    {
      "name": "OS_KEYPAIR_FILE",
      "description": "OpenStack Keypair Filename",
      "default": "/etc/secrets/os-keypair"
    },
    {
      "name": "OS_KEYPAIR",
      "description": "OpenStack Keypair Name",
      "default": ""
    },
    {
      "name": "OS_JUMPBOX_CIDR",
      "description": "OpenStack Jumpbox CIDR",
      "default": ""
    },
    {
      "name": "aws-secret-key",
      "description": "The AWS secret key contents",
      "secret": true
    },
    {
      "name": "keypair",
      "description": "The AWS keypair contents",
      "secret": true
    },
    {
      "name": "os-keypair",
      "description": "The OpenStack keypair contents",
      "secret": true
    },
    {
      "name": "vs-keypair",
      "description": "VSphere keypair contents",
      "secret": true
    },
    {
      "name": "VS_USERNAME",
      "description": "VSphere Username",
      "default": ""
    },
    {
      "name": "VS_PASSWORD_FILE",
      "description": "VSphere Password File",
      "default": "/etc/secrets/vs-password"
    },
    {
      "name": "vs-password",
      "description": "VSphere password",
      "secret": true
    },
    {
      "name": "VS_SERVER",
      "description": "VSphere Server",
      "default": ""
    },
    {
      "name": "VS_INSECURE",
      "description": "VSphere Insecure Flag",
      "default": ""
    },
    {
      "name": "VS_NETWORK_NAME",
      "description": "VSphere Network Name",
      "default": ""
    },
    {
      "name": "VS_LB_VIP_ALLOCATION_START",
      "description": "VSphere Loadbalancer VIP start address",
      "default": ""
    },
    {
      "name": "VS_LB_VIP_ALLOCATION_END",
      "description": "VSphere Loadbalancer VIP end address",
      "default": ""
    },
    {
      "name": "VS_LB_VIRTUAL_ROUTER_ID",
      "description": "VSphere Loadbalancer virtual router ID",
      "default": ""
    },
    {
      "name": "VS_CIDATA_ISO",
      "description": "VSPhere CI Data",
      "default": ""
    },
    {
      "name": "VS_DATASTORE",
      "description": "VSphere Datastore",
      "default": ""
    },
    {
      "name": "VS_DATACENTERS",
      "description": "VSphere Datacenter",
      "default": ""
    },
    {
      "name": "VS_CLUSTER",
      "description": "VSphere Cluster",
      "default": ""
    },
    {
      "name": "VS_FOLDER",
      "description": "VSphere folder",
      "default": ""
    },
    {
      "name": "VS_KEYPAIR_FILE",
      "description": "VSphere Keypair Filename" ,
      "default": "/etc/secrets/vs-keypair"
    },
    {
      "name": "VS_LINUX_VMDK_SOURCE",
      "description": "VSphere VMDK source to use for Ubuntu 14.04.3",
      "default": ""
    },
    {
      "name": "VS_WINDOWS2012R2_VMDK_SOURCE",
      "description": "VSphere VMDK source to use for Microsoft Windows Server 2012R2",
      "default": ""
    },
    {
      "name": "VS_MASTER_NUM_VCPUS",
      "description": "Number of Virtual CPUs to use for Master",
      "default": "2"
    },
    {
      "name": "VS_NODE_NUM_VCPUS",
      "description": "Number of Virtual CPUs to use for Node",
      "default": "2"
    },
    {
      "name": "VS_GLUSTERFS_NUM_VCPUS",
      "description": "Number of Virtual CPUs to use for Gluster Filesystem",
      "default": "2"
    },
    {
      "name": "VS_WINDOWS2012R2_NUM_VCPUS",
      "description": "Number of Virtual CPUs to use for Windows Server",
      "default": "2"
    },
    {
      "name": "VS_MASTER_MEM_MB",
      "description": "Memory in MB to use for Master",
      "default": "4096"
    },
    {
      "name": "VS_NODE_MEM_MB",
      "description": "Memory in MB to use for Node",
      "default": "8192"
    },
    {
      "name": "VS_GLUSTERFS_MEM_MB",
      "description": "Memory in MB to use for Gluster FS",
      "default": "4096"
    },
    {
      "name": "VS_WINDOWS2012R2_MEM_MB",
      "description": "Memory in MB to use for Windows Server",
      "default": "8192"
    },
    {
      "name": "VS_NODE_IP",
      "description": "XXX VSphere Node IP",
      "required": true
    },
    {
      "name": "DB_USER",
      "description": "PostgreSQL user",
      "default": "postgres"
    },
    {
      "name": "DB_HOST",
      "description": "Database host address",
      "default": "pgsql-int"
    },
    {
      "name": "DB_PORT",
      "description": "PostgreSQL port",
      "default": "5432"
    },
    {
      "name": "PGDATA",
      "description": "Postgres data directory location. This must be the same as the pgsql volume mount point.",
      "default": "/data/pgsql"
    },
    {
      "name": "PGPORT",
      "description": "Port that the Postgres server listens on. This must match the service port definition.",
      "default": "5432"
    },
    {
      "name": "POSTGRES_USER",
      "description": "Postgres super user",
      "default": "postgres"
    },
    {
      "name": "POSTGRES_PASSWORD_FILE",
      "description": "Postgres super user's password file",
      "default": "/etc/secrets/pgsql"
    },
    {
      "name": "POSTGRES_SSL_CERTIFICATE",
      "description": "Password file containing the super user's password. This is a server-side parameter.",
      "default": "/etc/secrets/pg-ssl-cert"
    },
    {
      "name": "POSTGRES_SSL_KEY_FILE",
      "description": "Password file containing the super user's password. This is a server-side parameter.",
      "default": "/etc/secrets/pg-ssl-key"
    },
    {
      "name": "POSTGRES_INITDB_ARGS",
      "description": "Optional arguments to Postgres initdb operation. This is a server-side parameter.",
      "default": ""
    },
    {
      "name": "NATS_HOST",
      "description": "NATS host address",
      "default": "nats-int:4222"
    },
    {
      "name": "NATS_PORT",
      "description": "Port number for NATS",
      "default": "4222"
    },
    {
      "name": "NATS_USERNAME",
      "description": "NATS username",
      "default": "hcp"
    },
    {
      "name": "NATS_PASSWORD_FILE",
      "description": "Secret file location to use in NATS",
      "default": "/etc/secrets/nats"
    },
    {
      "name": "NATS_USE_TLS",
      "description": "If NATS should use TLS",
      "default": "true"
    },
    {
      "name": "nats-tls-cert",
      "description": "TLS cert",
      "secret": true
    },
    {
      "name": "nats-tls-key",
      "description": "Private key for TLS cert",
      "secret": true
    },
    {
      "name": "REDIS_HOST",
      "description": "Redis host address",
      "default": "redis-int:6379"
    },
    {
      "name": "REDIS_POOL_SIZE",
      "description": "Initial Size of the Redis Pool",
      "default": "100"
    },
    {
      "name": "REDIS_PASSWORD_FILE",
      "description": "Secret file location to use in Redis",
      "default": "/etc/secrets/redis"
    },
    {
      "name": "REDIS_TLS_KEY",
      "description": "SSL private key file to use in Redis",
      "default": "/etc/secrets/redis-tls-key"
    },
    {
      "name": "REDIS_TLS_CERT",
      "description": "SSL certificate file to use in Redis",
      "default": "/etc/secrets/redis-tls-cert"
    },
    {
      "name": "REDIS_NETWORK",
      "description": "Network protocol used to communicate with Redis",
      "default": "tcp"
    },
    {
      "name": "FLIGHTRECORDER_EXPIRE_HOUR",
      "description": "Time in hours after which task logs should be expired and not be anymore available for Flight Entertainment",
      "default": "24"
    },
    {
      "name": "UAA_CONFIG_PATH",
      "description": "Config path for uaa",
      "default": "/uaa-postgresql"
    },
    {
      "name": "UAA_CONFIG_FILE",
      "description": "Config file for uaa",
      "default": "/uaa-postgresql/uaa.yml"
    },
    {
      "name": "DB_ADDR",
      "description": "Database address",
      "default": "pgsql-int"
    },
    {
      "name": "DB_ENV_DB",
      "description": "Database for UAA",
      "default": "uaa"
    },
    {
      "name": "DB_ENV_USER",
      "description": "Database user",
      "default": "uaa"
    },
    {
      "name": "DB_ENV_PASS",
      "description": "Database env password",
      "default": "uaaFun"
    },
    {
      "name": "UAA_ADMIN_CLIENT_SECRET_FILE",
      "description": "Client Secret for initial UAA Admin Client",
      "default": "/etc/secrets/uaa-client-secret"
    },
    {
      "name": "FLIGHTRECORDER_HOST",
      "description": "Hostname to advertise for flightrecorder",
      "default": "flightrecorder-int.hcp.svc.cluster.hcp"
    },
    {
      "name": "FLIGHTRECORDER_PORT",
      "description": "Port number to advertise for flightrecorder",
      "default": "514"
    },
    {
      "name": "FLIGHTENTERTAINMENT_HOST",
      "description": "Hostname to advertise for flightentertainment",
      "default": "flightentertainment-int.hcp.svc.cluster.hcp"
    },
    {
      "name": "FLIGHTENTERTAINMENT_PORT",
      "description": "Port number to advertise for flightentertainment",
      "default": "8113"
    },
    {
      "name": "MAX_LOGLINES_COUNT",
      "description": "Maximum number of log lines Flight Entertainment returns to user",
      "default": "250"
    },
    {
      "name": "RPMGR_DB_TYPE",
      "description": "Database type to use in rpmgr",
      "default": "postgresql"
    },
    {
      "name": "RPMGR_PGSQL_USER",
      "description": "Database username to use in rpmgr",
      "default": "rpmgr"
    },
    {
      "name": "RPMGR_PGSQL_PASSWORD_FILE",
      "description": "Database secret file location to use in rpmgr",
      "default": "/etc/secrets/rpmgr"
    },
    {
      "name": "RPMGR_PGSQL_HOST",
      "description": "Database hostname to use in rpmgr",
      "default": "pgsql-int"
    },
    {
      "name": "RPMGR_PGSQL_PORT",
      "description": "Database port to use in rpmgr",
      "default": "5432"
    },
    {
      "name": "RPMGR_PGSQL_DATABASE",
      "description": "Database to use in rpmgr",
      "default": "rpmgr"
    },
    {
      "name": "RPMGR_PGSQL_SSL_MODE",
      "description": "Database SSL mode to use in rpmgr",
      "default": "verify-full"
    },
    {
      "name": "RPMGR_PGSQL_ROOT_CERTIFICATE_FILE",
      "description": "Database SSL root certificate to use in rpmgr",
      "default": "/etc/secrets/ca-cert"
    },
    {
      "name": "RPMGR_PGSQL_CONNECTION_TIMEOUT",
      "description": "Database connection timeout to use in rpmgr",
      "default": "10"
    },
    {
      "name": "RPMGR_TLS_KEY",
      "description": "SSL private key file to use in rpmgr for TLS API access",
      "default": "/etc/secrets/rpmgr-https-key"
    },
    {
      "name": "RPMGR_TLS_CERTIFICATE",
      "description": "SSL certificate file to use in rpmgr for TLS API access",
      "default": "/etc/secrets/rpmgr-https-cert"
    },
    {
      "name": "IPMGR_DB_TYPE",
      "description": "Database type to use in ipmgr",
      "default": "postgresql"
    },
    {
      "name": "IPMGR_PGSQL_USER",
      "description": "Database username to use in ipmgr",
      "default": "ipmgr"
    },
    {
      "name": "IPMGR_PGSQL_PASSWORD_FILE",
      "description": "Database secret file location to use in ipmgr",
      "default": "/etc/secrets/ipmgr"
    },
    {
      "name": "IPMGR_PGSQL_HOST",
      "description": "Database hostname to use in ipmgr",
      "default": "pgsql-int"
    },
    {
      "name": "IPMGR_PGSQL_PORT",
      "description": "Database port to use in ipmgr",
      "default": "5432"
    },
    {
      "name": "IPMGR_PGSQL_DATABASE",
      "description": "Database to use in ipmgr",
      "default": "ipmgr"
    },
    {
      "name": "IPMGR_PGSQL_SSL_MODE",
      "description": "Database SSL mode to use in ipmgr",
      "default": "verify-full"
    },
    {
      "name": "IPMGR_PGSQL_ROOT_CERTIFICATE_FILE",
      "description": "Database SSL root certificate to use in ipmgr",
      "default": "/etc/secrets/ca-cert"
    },
    {
      "name": "IPMGR_PGSQL_CONNECTION_TIMEOUT",
      "description": "Database connection timeout to use in ipmgr",
      "default": "10"
    },
    {
       "name": "IPMGR_TLS_PRIVATE_KEY",
       "description": "SSL private key file to use in ipmgr for TLS API access",
       "default": "/etc/secrets/ipmgr-https-key"
    },
    {
       "name": "IPMGR_TLS_CERTIFICATE",
       "description": "SSL certificate file to use in ipmgr for TLS API access",
       "default": "/etc/secrets/ipmgr-https-cert"
    },
    {
       "name": "IPMGR_TLS_KUBERNETES_CLIENT_PRIVATE_KEY",
       "description": "SSL private client key file to use in ipmgr for Kubernetes API access",
       "default": "/etc/secrets/ipmgr-kubernetes-key"
    },
    {
       "name": "IPMGR_TLS_KUBERNETES_CLIENT_CERTIFICATE",
       "description": "SSL client certificate file to use in ipmgr for Kubernetes API access",
       "default": "/etc/secrets/ipmgr-kubernetes-cert"
    },
    {
      "name": "DOMAIN_SUFFIX",
      "description": "Kubernetes DNS domain suffix",
      "default": "cluster.hcp"
    },
    {
      "name": "DOCKER_VOLUME_SIZE",
      "description": "Default Docker Volume size for new VMs (in GB)",
      "default": "80"
    },
    {
      "name": "ROOT_VOLUME_SIZE",
      "description": "Default Root Volume size for new VMs (in GB)",
      "default": "80"
    },
    {
      "name": "SHARED_VOLUME_SIZE",
      "description": "Size of the volume on which shared filesystems will be provisioned (in GB)",
      "default": "80"
    },
    {
      "name": "RPMGR_KEEP_TERRAFORM",
      "description": "Keep Terraform files around after completion (for debugging purposes)",
      "default": "false"
    },
    {
      "name": "rpmgr",
      "description": "PostgreSQL password for rpmgr",
      "secret": true
    },
    {
      "name": "rpmgr-https-key",
      "description": "HTTPS key file for rpmgr",
      "secret": true
    },
    {
      "name": "rpmgr-https-cert",
      "description": "HTTPS cert file for rpmgr",
      "secret": true
    },
    {
      "name": "ipmgr",
      "description": "PostgreSQL password for ipmgr",
      "secret": true
    },
    {
      "name": "ipmgr-https-key",
      "description": "HTTPS key file for ipmgr",
      "secret": true
    },
    {
      "name": "ipmgr-https-cert",
      "description": "HTTPS cert file for ipmgr",
      "secret": true
    },
    {
      "name": "ipmgr-kubernetes-key",
      "description": "HTTPS client key file for ipmgr Kubernetes",
      "secret": true
    },
    {
      "name": "ipmgr-kubernetes-cert",
      "description": "HTTPS client cert file for ipmgr Kubernetes",
      "secret": true
    },
    {
      "name": "uaa",
      "description": "PostgreSQL password for UAA",
      "secret": true
    },
    {
      "name": "nats",
      "description": "Password for NATS",
      "secret": true
    },
    {
      "name": "redis",
      "description": "Password for REDIS",
      "secret": true
    },
    {
      "name": "redis-tls-key",
      "description": "TLS private key file for Redis",
      "secret": true
    },
    {
      "name": "redis-tls-cert",
      "description": "TLS cert file for Redis",
      "secret": true
    },
    {
      "name": "uaa-client-secret",
      "description": "Client secret for UAA admin client",
      "secret": true
    },
    {
      "name": "uaa-token-signing-key",
      "description": "Private key for UAA signing token",
      "secret": true
    },
    {
      "name": "uaa-token-verification-key",
      "description": "Public key for UAA signing token",
      "secret": true
    },
    {
      "name": "uaa-tls-cert",
      "description": "TLS cert",
      "secret": true
    },
    {
      "name": "uaa-tls-key",
      "description": "Private key for TLS cert",
      "secret": true
    },
    {
      "name": "uaa-keystore-password",
      "description": "UAA keystore password",
      "secret": true
    },
    {
      "name": "TOKEN_VERIFICATION_KEY_FILE",
      "description": "Location of file containing verification key for UAA tokens",
      "default": "/etc/secrets/uaa-token-verification-key"
    },
    {
      "name": "IPMGR_CATALOG_LOCATION",
      "description": "Location of service/instance catalog in S3",
      "default": "hpe-catalog;helion-service-manager/release/catalog-templates/HCP-v1/alpha-1:us-west-2;s3"
    },
    {
      "name": "AWS_WINDOWS_PASSWORD_FILE",
      "description": "The AWS Windows password file on disk",
      "default": "/etc/secrets/windows"
    },
    {
      "name": "OS_WINDOWS_PASSWORD_FILE",
      "description": "The OpenStack Windows password file on disk",
      "default": "/etc/secrets/windows"
    },
    {
      "name": "windows",
      "description": "Windows host password",
      "secret": true
    },
    {
      "name": "REPOSITORY_PATH",
      "description": "Path to the docker registry to use as the default image repository",
      "default": ""
    },
    {
      "name": "ca-cert",
      "description": "HCP CA certificate",
      "secret": true
    },
    {
      "name": "CA_CERT_FILE",
      "description": "File containing the CA certificate",
      "default": "/etc/secrets/ca-cert"
    },
    {
      "name": "ca-key",
      "description": "HCP CA private key",
      "secret": true
    },
    {
      "name": "CA_KEY_FILE",
      "description": "File containing the CA certificate key",
      "default": "/etc/secrets/ca-key"
    },
    {
      "name": "pgsql",
      "description": "PostgreSQL super user's password",
      "secret": true
    },
    {
      "name": "pg-ssl-cert",
      "description": "Postgres SSL certificate",
      "secret": true
    },
    {
      "name": "pg-ssl-key",
      "description": "Postgres SSL private key",
      "secret": true
    },
    {
      "name": "HCP_DOMAIN_NAME",
      "description": "Domain Name to use for the HCP install",
      "default": ""
    }
  ],
  "volumes": [
    {
      "name": "pgsql-data",
      "size_gb": 10,
      "filesystem": "ext4",
      "shared": false
    }
  ],
  "components": [
    {
      "name": "ipmgr",
      "version": "1.0.0",
      "vendor": "HPE",
      "external_name": "ipmgr",
      "repository": "docker-registry.helion.space:443",
      "image": "hcp/ipmgr",
      "min_RAM_mb": 512,
      "min_disk_gb": 1,
      "platform": "linux-x86_64",
      "workload_type": "container",
      "parameters": [
        {
          "name": "CLUSTER_ID"
        },
        {
          "name": "KUBERNETES_VERSION"
        },
        {
          "name": "NTP_SERVERS"
        },
        {
          "name": "TLS_INSECURE"
        },
        {
          "name": "KUBERNETES_MASTER"
        },
        {
          "name": "IPMGR_DB_TYPE"
        },
        {
          "name": "IPMGR_PGSQL_USER"
        },
        {
          "name": "IPMGR_PGSQL_PASSWORD_FILE"
        },
        {
          "name": "IPMGR_PGSQL_HOST"
        },
        {
          "name": "IPMGR_PGSQL_PORT"
        },
        {
          "name": "IPMGR_PGSQL_DATABASE"
        },
        {
          "name": "IPMGR_PGSQL_SSL_MODE"
        },
        {
          "name": "IPMGR_PGSQL_ROOT_CERTIFICATE_FILE"
        },
        {
          "name": "IPMGR_PGSQL_CONNECTION_TIMEOUT"
        },
        {
          "name": "pgsql"
        },
        {
          "name": "IPMGR_TLS_CERTIFICATE"
        },
        {
          "name": "IPMGR_TLS_PRIVATE_KEY"
        },
        {
          "name": "NATS_HOST"
        },
        {
          "name": "NATS_USERNAME"
        },
        {
          "name": "NATS_PASSWORD_FILE"
        },
        {
          "name": "NATS_USE_TLS"
        },
        {
          "name": "nats"
        },
        {
          "name": "NATS_PORT"
        },
        {
          "name": "LOG_LEVEL"
        },
        {
          "name": "ipmgr"
        },
        {
          "name": "ipmgr-https-key"
        },
        {
          "name": "ipmgr-https-cert"
        },
        {
          "name": "IPMGR_PROVIDER"
        },
        {
          "name": "FLIGHTRECORDER_HOST"
        },
        {
          "name": "FLIGHTRECORDER_PORT"
        },
        {
          "name": "FLIGHTENTERTAINMENT_HOST"
        },
        {
          "name": "FLIGHTENTERTAINMENT_PORT"
        },
        {
          "name": "DOMAIN_SUFFIX"
        },
        {
          "name": "AWS_REGION"
        },
        {
          "name": "AWS_AVAILABILITY_ZONES"
        },
        {
          "name": "AWS_MASTER_INSTANCE_TYPE"
        },
        {
          "name": "AWS_NODE_INSTANCE_TYPE"
        },
        {
          "name": "AWS_GLUSTERFS_INSTANCE_TYPE"
        },
        {
          "name": "AWS_WINDOWS2012R2_INSTANCE_TYPE"
        },
        {
          "name": "AWS_LINUX_AMI"
        },
        {
          "name": "AWS_WINDOWS2012R2_AMI"
        },
        {
          "name": "AWS_VPC_ID"
        },
        {
          "name": "AWS_KEYPAIR"
        },
        {
          "name": "AWS_KEYPAIR_FILE"
        },
        {
          "name": "AWS_ACCESS_KEY_ID"
        },
        {
          "name": "AWS_SECRET_KEY_FILE"
        },
        {
          "name": "AWS_JUMPBOX_CIDR"
        },
        {
          "name": "AWS_PUBLIC_SUBNET_IDS_AND_AZ"
        },
        {
          "name": "AWS_PRIVATE_SUBNET_IDS_AND_AZ"
        },
        {
          "name": "aws-secret-key"
        },
        {
          "name": "keypair"
        },
        {
          "name": "OS_AUTH_URL"
        },
        {
          "name": "OS_USERNAME"
        },
        {
          "name": "OS_PASSWORD"
        },
        {
          "name": "OS_DOMAIN_ID"
        },
        {
          "name": "OS_DOMAIN_NAME"
        },
        {
          "name": "OS_TENANT_ID"
        },
        {
          "name": "OS_TENANT_NAME"
        },
        {
          "name": "OS_INSECURE"
        },
        {
          "name": "OS_ENDPOINT_TYPE"
        },
        {
          "name": "OS_REGION_NAME"
        },
        {
          "name": "OS_POOL_NAME"
        },
        {
          "name": "OS_NETWORK_ID"
        },
        {
          "name": "OS_SUBNET_ID"
        },
        {
          "name": "OS_AVAILABILITY_ZONE"
        },
        {
          "name": "OS_MASTER_FLAVOR_ID"
        },
        {
          "name": "OS_NODE_FLAVOR_ID"
        },
        {
          "name": "OS_GLUSTERFS_FLAVOR_ID"
        },
        {
          "name": "OS_WINDOWS2012R2_FLAVOR_ID"
        },
        {
          "name": "OS_LINUX_IMAGE_ID"
        },
        {
          "name": "OS_WINDOWS2012R2_IMAGE_ID"
        },
        {
          "name": "OS_KEYPAIR_FILE"
        },
        {
          "name": "OS_KEYPAIR"
        },
        {
          "name": "OS_JUMPBOX_CIDR"
        },
        {
          "name": "os-keypair"
        },
        {
          "name": "vs-keypair"
        },
        {
          "name": "VS_USERNAME"
        },
        {
          "name": "VS_PASSWORD_FILE"
        },
        {
          "name": "vs-password"
        },
        {
          "name": "VS_SERVER"
        },
        {
          "name": "VS_INSECURE"
        },
        {
          "name": "VS_NETWORK_NAME"
        },
        {
          "name": "VS_LB_VIP_ALLOCATION_START"
        },
        {
          "name": "VS_LB_VIP_ALLOCATION_END"
        },
        {
          "name": "VS_LB_VIRTUAL_ROUTER_ID"
        },
        {
          "name": "VS_CIDATA_ISO"
        },
        {
          "name": "VS_DATASTORE"
        },
        {
          "name": "VS_DATACENTERS"
        },
        {
          "name": "VS_CLUSTER"
        },
        {
          "name": "VS_FOLDER"
        },
        {
          "name": "VS_KEYPAIR_FILE"
        },
        {
          "name": "VS_LINUX_VMDK_SOURCE"
        },
        {
          "name": "VS_WINDOWS2012R2_VMDK_SOURCE"
        },
        {
          "name": "VS_MASTER_NUM_VCPUS"
        },
        {
          "name": "VS_NODE_NUM_VCPUS"
        },
        {
          "name": "VS_GLUSTERFS_NUM_VCPUS"
        },
        {
          "name": "VS_WINDOWS2012R2_NUM_VCPUS"
        },
        {
          "name": "VS_MASTER_MEM_MB"
        },
        {
          "name": "VS_NODE_MEM_MB"
        },
        {
          "name": "VS_GLUSTERFS_MEM_MB"
        },
        {
          "name": "VS_WINDOWS2012R2_MEM_MB"
        },
        {
          "name": "VS_NODE_IP"
        },
        {
          "name": "UAA_ADMIN_CLIENT_SECRET_FILE"
        },
        {
          "name": "uaa-client-secret"
        },
        {
          "name": "uaa-token-verification-key"
        },
        {
          "name": "uaa-tls-cert"
        },
        {
          "name": "uaa-tls-key"
        },
        {
          "name": "uaa-keystore-password"
        },
        {
          "name": "TOKEN_VERIFICATION_KEY_FILE"
        },
        {
          "name": "IPMGR_CATALOG_LOCATION"
        },
        {
          "name": "REPOSITORY_PATH"
        },
        {
          "name": "CA_CERT_FILE"
        },
        {
          "name": "ca-cert"
        },
        {
          "name": "HCP_DOMAIN_NAME"
        }
      ],
      "min_instances": 1,
      "max_instances": 50,
      "service_ports": [
        {
          "name": "ipmgr-api-http",
          "protocol": "TCP",
          "source_port": 8111,
          "target_port": 8111,
          "public": true
        },
        {
          "name": "ipmgr-api-https",
          "protocol": "TCP",
          "source_port": 8443,
          "target_port": 8443,
          "public": true
        }
      ]
    },
    {
      "name": "rpmgr",
      "version": "0.1.0",
      "vendor": "HPE",
      "external_name": "rpmgr",
      "repository": "docker-registry.helion.space:443",
      "image": "hcp/rpmgr",
      "min_RAM_mb": 512,
      "min_disk_gb": 1,
      "platform": "linux-x86_64",
      "workload_type": "container",
      "parameters": [
        {
          "name": "CLUSTER_ID"
        },
        {
          "name": "KUBERNETES_VERSION"
        },
        {
          "name": "NTP_SERVERS"
        },
        {
          "name": "RPMGR_DOCKER_VERSION"
        },
        {
          "name": "RPMGR_PROVIDER"
        },
        {
          "name": "LOG_LEVEL"
        },
        {
          "name": "NATS_HOST"
        },
        {
          "name": "NATS_USERNAME"
        },
        {
          "name": "NATS_PASSWORD_FILE"
        },
        {
          "name": "NATS_USE_TLS"
        },
        {
          "name": "nats"
        },
        {
          "name": "NATS_PORT"
        },
        {
          "name": "RPMGR_DB_TYPE"
        },
        {
          "name": "RPMGR_PGSQL_USER"
        },
        {
          "name": "RPMGR_PGSQL_PASSWORD_FILE"
        },
        {
          "name": "pgsql"
        },
        {
          "name": "RPMGR_PGSQL_HOST"
        },
        {
          "name": "RPMGR_PGSQL_PORT"
        },
        {
          "name": "RPMGR_PGSQL_DATABASE"
        },
        {
          "name": "RPMGR_PGSQL_SSL_MODE"
        },
        {
          "name": "RPMGR_PGSQL_ROOT_CERTIFICATE_FILE"
        },
        {
          "name": "RPMGR_TLS_CERTIFICATE"
        },
        {
          "name": "RPMGR_TLS_KEY"
        },
        {
          "name": "RPMGR_PGSQL_CONNECTION_TIMEOUT"
        },
        {
          "name": "AWS_REGION"
        },
        {
          "name": "AWS_AVAILABILITY_ZONES"
        },
        {
          "name": "AWS_MASTER_INSTANCE_TYPE"
        },
        {
          "name": "AWS_NODE_INSTANCE_TYPE"
        },
        {
          "name": "AWS_GLUSTERFS_INSTANCE_TYPE"
        },
        {
          "name": "AWS_WINDOWS2012R2_INSTANCE_TYPE"
        },
        {
          "name": "AWS_LINUX_AMI"
        },
        {
          "name": "AWS_WINDOWS2012R2_AMI"
        },
        {
          "name": "AWS_VPC_ID"
        },
        {
          "name": "AWS_KEYPAIR"
        },
        {
          "name": "AWS_KEYPAIR_FILE"
        },
        {
          "name": "AWS_ACCESS_KEY_ID"
        },
        {
          "name": "AWS_SECRET_KEY_FILE"
        },
        {
          "name": "AWS_JUMPBOX_CIDR"
        },
        {
          "name": "AWS_PUBLIC_SUBNET_IDS_AND_AZ"
        },
        {
          "name": "AWS_PRIVATE_SUBNET_IDS_AND_AZ"
        },
        {
          "name": "DOCKER_VOLUME_SIZE"
        },
        {
          "name": "ROOT_VOLUME_SIZE"
        },
        {
          "name": "SHARED_VOLUME_SIZE"
        },
        {
          "name": "aws-secret-key"
        },
        {
          "name": "keypair"
        },
        {
          "name": "rpmgr"
        },
        {
          "name": "rpmgr-https-key"
        },
        {
          "name": "rpmgr-https-cert"
        },
        {
          "name": "OS_AUTH_URL"
        },
        {
          "name": "OS_USERNAME"
        },
        {
          "name": "OS_PASSWORD"
        },
        {
          "name": "OS_DOMAIN_ID"
        },
        {
          "name": "OS_DOMAIN_NAME"
        },
        {
          "name": "OS_TENANT_ID"
        },
        {
          "name": "OS_TENANT_NAME"
        },
        {
          "name": "OS_INSECURE"
        },
        {
          "name": "OS_ENDPOINT_TYPE"
        },
        {
          "name": "OS_REGION_NAME"
        },
        {
          "name": "OS_POOL_NAME"
        },
        {
          "name": "OS_NETWORK_ID"
        },
        {
          "name": "OS_SUBNET_ID"
        },
        {
          "name": "OS_AVAILABILITY_ZONE"
        },
        {
          "name": "OS_MASTER_FLAVOR_ID"
        },
        {
          "name": "OS_NODE_FLAVOR_ID"
        },
        {
          "name": "OS_GLUSTERFS_FLAVOR_ID"
        },
        {
          "name": "OS_WINDOWS2012R2_FLAVOR_ID"
        },
        {
          "name": "OS_LINUX_IMAGE_ID"
        },
        {
          "name": "OS_WINDOWS2012R2_IMAGE_ID"
        },
        {
          "name": "OS_KEYPAIR_FILE"
        },
        {
          "name": "OS_KEYPAIR"
        },
        {
          "name": "OS_JUMPBOX_CIDR"
        },
        {
          "name": "os-keypair"
        },
        {
          "name": "vs-keypair"
        },
        {
          "name": "VS_USERNAME"
        },
        {
          "name": "VS_PASSWORD_FILE"
        },
        {
          "name": "vs-password"
        },
        {
          "name": "VS_SERVER"
        },
        {
          "name": "VS_INSECURE"
        },
        {
          "name": "VS_NETWORK_NAME"
        },
        {
          "name": "VS_LB_VIP_ALLOCATION_START"
        },
        {
          "name": "VS_LB_VIP_ALLOCATION_END"
        },
        {
          "name": "VS_LB_VIRTUAL_ROUTER_ID"
        },
        {
          "name": "VS_CIDATA_ISO"
        },
        {
          "name": "VS_DATASTORE"
        },
        {
          "name": "VS_DATACENTERS"
        },
        {
          "name": "VS_CLUSTER"
        },
        {
          "name": "VS_FOLDER"
        },
        {
          "name": "VS_KEYPAIR_FILE"
        },
        {
          "name": "VS_LINUX_VMDK_SOURCE"
        },
        {
          "name": "VS_WINDOWS2012R2_VMDK_SOURCE"
        },
        {
          "name": "VS_MASTER_NUM_VCPUS"
        },
        {
          "name": "VS_NODE_NUM_VCPUS"
        },
        {
          "name": "VS_GLUSTERFS_NUM_VCPUS"
        },
        {
          "name": "VS_WINDOWS2012R2_NUM_VCPUS"
        },
        {
          "name": "VS_MASTER_MEM_MB"
        },
        {
          "name": "VS_NODE_MEM_MB"
        },
        {
          "name": "VS_GLUSTERFS_MEM_MB"
        },
        {
          "name": "VS_WINDOWS2012R2_MEM_MB"
        },
        {
          "name": "RPMGR_KEEP_TERRAFORM"
        },
        {
          "name": "AWS_WINDOWS_PASSWORD_FILE"
        },
        {
          "name": "OS_WINDOWS_PASSWORD_FILE"
        },
        {
          "name": "CA_CERT_FILE"
        },
        {
          "name": "ca-cert"
        },
        {
          "name": "CA_KEY_FILE"
        },
        {
          "name": "ca-key"
        },
        {
          "name": "windows"
        }
      ],
      "min_instances": 1,
      "max_instances": 50,
      "service_ports": [
        {
          "name": "http",
          "protocol": "TCP",
          "source_port": 8112,
          "target_port": 8112,
          "public": false
        }
      ]
    },
    {
      "name": "nats",
      "version": "0.1.0",
      "vendor": "HPE",
      "external_name": "nats",
      "repository": "docker-registry.helion.space:443",
      "image": "hcp/nats",
      "min_RAM_mb": 512,
      "min_disk_gb": 1,
      "platform": "linux-x86_64",
      "min_instances": 1,
      "max_instances": 1,
      "workload_type": "container",
      "parameters": [
        {
          "name": "NATS_HOST"
        },
        {
          "name": "NATS_USERNAME"
        },
        {
          "name": "NATS_PASSWORD_FILE"
        },
        {
          "name": "nats"
        },
        {
          "name": "NATS_PORT"
        },
        {
          "name": "nats-tls-cert"
        },
        {
          "name": "nats-tls-key"
        },
        {
          "name": "CA_CERT_FILE"
        },
        {
          "name": "ca-cert"
        }
      ],
      "service_ports": [
        {
          "name": "nats",
          "protocol": "TCP",
          "source_port": 4222,
          "target_port": 4222,
          "public": false
        },
        {
          "name": "nats-mgmt",
          "protocol": "TCP",
          "source_port": 8222,
          "target_port": 8222,
          "public": false
        }
      ]
    },
    {
      "name": "redis",
      "version": "3.2.0",
      "vendor": "HPE",
      "external_name": "redis",
      "repository": "docker-registry.helion.space:443",
      "image": "hcp/redis",
      "min_RAM_mb": 512,
      "min_disk_gb": 1,
      "platform": "linux-x86_64",
      "min_instances": 1,
      "max_instances": 1,
      "workload_type": "container",
      "parameters": [
        {
          "name": "REDIS_HOST"
        },
        {
          "name": "redis-tls-key"
        },
        {
          "name": "REDIS_TLS_KEY"
        },
        {
          "name": "redis-tls-cert"
        },
        {
          "name": "REDIS_TLS_CERT"
        },
        {
          "name": "redis"
        },
        {
          "name": "REDIS_PASSWORD_FILE"
        }
      ],
      "service_ports": [
        {
          "name": "redis",
          "protocol": "TCP",
          "source_port": 6379,
          "target_port": 6379,
          "public": false
        }
      ]
    },
    {
      "name": "ident-api",
      "version": "1.0.0",
      "vendor": "HPE",
      "external_name": "ident-api",
      "repository": "docker-registry.helion.space:443",
      "image": "hcp/uaa",
      "min_RAM_mb": 512,
      "min_disk_gb": 1,
      "platform": "linux-x86_64",
      "workload_type": "container",
      "parameters": [
        {
          "name": "UAA_CONFIG_PATH"
        },
        {
          "name": "UAA_CONFIG_FILE"
        },
        {
          "name": "DB_ADDR"
        },
        {
          "name": "DB_PORT"
        },
        {
          "name": "DB_ENV_DB"
        },
        {
          "name": "DB_ENV_USER"
        },
        {
          "name": "CA_CERT_FILE"
        },
        {
          "name": "HCP_DOMAIN_NAME"
        },
        {
          "name": "ca-cert"
        },
        {
          "name": "uaa"
        },
        {
          "name": "uaa-client-secret"
        },
        {
          "name": "uaa-token-signing-key"
        },
        {
          "name": "uaa-token-verification-key"
        },
        {
          "name": "uaa-tls-cert"
        },
        {
          "name": "uaa-tls-key"
        },
        {
          "name": "uaa-keystore-password"
        }
      ],
      "min_instances": 1,
      "max_instances": 1,
      "service_ports": [
        {
          "name": "ident-api-http",
          "source_port": 443,
          "target_port": 8443,
          "public": true
        }
      ]
    },
    {
      "name": "flightrecorder",
      "version": "0.1.0",
      "vendor": "HPE",
      "external_name": "flightrecorder",
      "repository": "docker-registry.helion.space:443",
      "image": "hcp/flightrecorder",
      "min_RAM_mb": 512,
      "min_disk_gb": 1,
      "platform": "linux-x86_64",
      "min_instances": 1,
      "max_instances": 1,
      "workload_type": "container",
      "parameters": [
        {
          "name": "LOGSTASH_HOST"
        },
        {
          "name": "LOGSTASH_PORT"
        },
        {
          "name": "REDIS_HOST"
        },
        {
          "name": "redis"
        },
        {
          "name": "REDIS_PASSWORD_FILE"
        },
        {
          "name": "redis-tls-key"
        },
        {
          "name": "REDIS_TLS_KEY"
        },
        {
          "name": "redis-tls-cert"
        },
        {
          "name": "REDIS_TLS_CERT"
        },
        {
          "name": "REDIS_POOL_SIZE"
        },
        {
          "name": "FLIGHTRECORDER_EXPIRE_HOUR"
        },
        {
          "name": "REDIS_NETWORK"
        }
      ],
      "service_ports": [
        {
          "name": "syslog",
          "protocol": "TCP",
          "source_port": 514,
          "target_port": 10514,
          "public": false
        }
      ]
    },
    {
      "name": "flightentertainment",
      "version": "0.1.0",
      "vendor": "HPE",
      "external_name": "flightentertainment",
      "repository": "docker-registry.helion.space:443",
      "image": "hcp/flightentertainment",
      "min_RAM_mb": 512,
      "min_disk_gb": 1,
      "platform": "linux-x86_64",
      "min_instances": 1,
      "max_instances": 1,
      "workload_type": "container",
      "parameters": [
        {
          "name": "REDIS_HOST"
        },
        {
          "name": "redis"
        },
        {
          "name": "REDIS_PASSWORD_FILE"
        },
        {
          "name": "redis-tls-key"
        },
        {
          "name": "REDIS_TLS_KEY"
        },
        {
          "name": "redis-tls-cert"
        },
        {
          "name": "REDIS_TLS_CERT"
        },
        {
          "name": "REDIS_POOL_SIZE"
        },
        {
          "name": "REDIS_NETWORK"
        },
        {
          "name": "MAX_LOGLINES_COUNT"
        },
        {
          "name": "uaa-token-verification-key"
        },
        {
          "name": "TOKEN_VERIFICATION_KEY_FILE"
        }
      ],
      "service_ports": [
        {
          "name": "tcp",
          "protocol": "TCP",
          "source_port": 8113,
          "target_port": 8113,
          "public": true
        }
      ]
    },
    {
      "name": "pgsql",
      "version": "0.1.0",
      "vendor": "HPE",
      "external_name": "pgsql",
      "repository": "docker-registry.helion.space:443",
      "image": "hcp/pgsql",
      "min_RAM_mb": 512,
      "min_disk_gb": 1,
      "platform": "linux-x86_64",
      "workload_type": "container",
      "parameters": [
        {
          "name": "PGDATA"
        },
        {
          "name": "PGPORT"
        },
        {
          "name": "POSTGRES_USER"
        },
        {
          "name": "POSTGRES_PASSWORD_FILE"
        },
        {
          "name": "POSTGRES_SSL_CERTIFICATE"
        },
        {
          "name": "POSTGRES_SSL_KEY_FILE"
        },
        {
          "name": "POSTGRES_INITDB_ARGS"
        },
        {
          "name": "pgsql"
        },
        {
          "name": "pg-ssl-cert"
        },
        {
          "name": "pg-ssl-key"
        }
      ],
      "min_instances": 1,
      "max_instances": 1,
      "service_ports": [
        {
          "name": "pgsql-1",
          "protocol": "TCP",
          "source_port": 5432,
          "target_port": 5432,
          "public": false
        }
      ],
      "volume_mounts": [
        {
          "volume_name": "pgsql-data",
          "mountpoint": "/data"
        }
      ]
    }
  ],
  "preflight": [],
  "postflight": [
    {
      "name": "configuration",
      "version": "0.1.0",
      "vendor": "HPE",
      "repository": "docker-registry.helion.space:443",
      "image": "hcp/configuration",
      "min_RAM_mb": 512,
      "min_disk_gb": 1,
      "platform": "linux-x86_64",
      "parameters": [
        {
          "name": "ipmgr"
        },
        {
          "name": "pgsql"
        },
        {
          "name": "uaa"
        },
        {
          "name": "rpmgr"
        },
        {
          "name": "DB_USER"
        },
        {
          "name": "DB_HOST"
        },
        {
          "name": "DB_PORT"
        },
        {
          "name": "CA_CERT_FILE"
        },
        {
          "name": "ca-cert"
        }
      ],
      "min_instances": 1,
      "max_instances": 1,
      "retry_count": 100
    }
  ]
}
